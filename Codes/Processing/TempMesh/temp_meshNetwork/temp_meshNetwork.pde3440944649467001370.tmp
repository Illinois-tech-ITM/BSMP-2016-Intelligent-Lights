import processing.serial.*;

Serial myPort;   // The serial port

float tempC;
float tempF;
int yDist;
PFont font12;
PFont font24;
float[] tempHistory = new float[100];

int addr1;
int addr2;
int addr3;
int addr4;

int i=0;

void setup() {

  //setup fonts for use throughout the application
  font12 = loadFont("Verdana-12.vlw");
  font24 = loadFont("Verdana-24.vlw");

  //set the size of the window
  size(1024, 768);


  //fill tempHistory with default temps
  for (int index = 0; index<100; index++)
    tempHistory[index] = 0;

  // I know that the first port in the serial list on my mac
  // is always my  FTDI adaptor, so I open Serial.list()[0].
  // On Windows machines, this generally opens COM1.
  // Open whatever port is the one you're using.
  println(Serial.list());
  String port = Serial.list()[4];
  println("Reading from port "+port);
  myPort = new Serial(this, port, 9600);
}

void draw() {

  if (myPort.available() >= 21) { // Wait for coordinator to recieve full XBee frame
    println("Starting a new package");
    for(int i=0; i<21; i++) println(hex(myPort.read()));
    /*if (myPort.read() == 0x7E) { // Look for 7E because it is the start byte
     for (int i = 1; i<19; i++) { // Skip through the frame to get to the unique 32 bit address
     int discardByte = myPort.read();
     }
     int analogMSB = myPort.read(); // Read the first analog byte data
     int analogLSB = myPort.read(); // Read the second byte
     float volt = calculateXBeeVolt(analogMSB, analogLSB);//Convert analog values to voltage values
     print("Temperature in C: ");
     println(String.format("%.1f", calculateTempF(volt))); //calculate temperature value from voltage value
     
     //refresh the background to clear old data
     background(123);
     
     //draw the temp rectangle
     colorMode(RGB, 160);  //use color mode sized for fading
     stroke (0);
     rect (50,50, 924,668);
     //fade red and blue within the rectangle
     for (int colorIndex = 0; colorIndex <= 160; colorIndex++)
     {
     stroke(160 - colorIndex, 0, colorIndex);
     line(50, colorIndex + 20, 70, colorIndex + 20);
     }
     
     //write reference values
     fill(0, 0, 0);
     textFont(font12);
     textAlign(RIGHT);
     text("257 F", 45, 25);
     text("-40 F", 45, 187);
     
     //draw triangle pointer
     yDist = int(calculateTempF(volt));
     stroke(0);
     triangle(75, yDist + 20, 85, yDist + 15, 85, yDist + 25);
     
     //write the temp in C and F
     fill(0, 0, 0);
     textFont(font24);
     textAlign(LEFT);
     //text(str(int(tempC)) + " C", 115, 37);
     //tempF = ((tempC*9)/5) + 32;
     //text(calculateTempF(volt));
     text("Temperature in C: " + String.format("%.1f", calculateTempF(volt)) + " C", 115, 135);
     } else { println("Not receiving start byte"); }
     */
  }
}

//this function calculates temp in F from temp sensor
float calculateTempF(float v1) {
  float temp = 0;
  temp = v1 / 1023.0 * 1.23;
  temp = (temp - 0.5) / 0.01;
  return temp;
}

//This function takes an XBee analog pin reading and converts it to a voltage value
float calculateXBeeVolt(int analogMSB, int analogLSB) {
  int analogReading = analogLSB + (analogMSB * 256); //Turn the two bytes into an integer value
  float volt = ((float)analogReading / 1023)*1.23; //Convert the analog value to a voltage value
  return volt;
}